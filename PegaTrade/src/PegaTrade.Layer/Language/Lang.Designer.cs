//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PegaTrade.Layer.Language {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Lang {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Lang() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PegaTrade.Layer.Language.Lang", typeof(Lang).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your API is already up to date..
        /// </summary>
        public static string ApiAlreadyUptoDate {
            get {
                return ResourceManager.GetString("ApiAlreadyUptoDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The API you are trying to delete cannot be found..
        /// </summary>
        public static string ApiDeleteNotFound {
            get {
                return ResourceManager.GetString("ApiDeleteNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Either there are no new trades to import or an error occured while trying to do so..
        /// </summary>
        public static string ApiNoNewTradesOrError {
            get {
                return ResourceManager.GetString("ApiNoNewTradesOrError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We&apos;re sorry, we currently only allow {0} coins max to import for your subscription. You can upgrade to increase this limit. .
        /// </summary>
        public static string CSVMaxImportAllowed {
            get {
                return ResourceManager.GetString("CSVMaxImportAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import failed... Please make sure the file is in correct format and the correct Exchange is selected..
        /// </summary>
        public static string ImportFailedCSV {
            get {
                return ResourceManager.GetString("ImportFailedCSV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your password has been successfully reset. Please login with your new password..
        /// </summary>
        public static string PasswordHasBeenResetPleaseLogin {
            get {
                return ResourceManager.GetString("PasswordHasBeenResetPleaseLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your password reset link has been sent to your email address. If you are having troubling finding the email, please check your spam folder. If you still cannot find it, please contact us at support@pegatrade.com..
        /// </summary>
        public static string PasswordResetEmailSent {
            get {
                return ResourceManager.GetString("PasswordResetEmailSent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The portfolio that you are trying to modify cannot be found..
        /// </summary>
        public static string PortfolioNotFound {
            get {
                return ResourceManager.GetString("PortfolioNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A server connection error has occured..
        /// </summary>
        public static string ServerConnectionError {
            get {
                return ResourceManager.GetString("ServerConnectionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to import successfully. Could be wrong key or you have no read permission..
        /// </summary>
        public static string UnableToImportWrongKeyPermission {
            get {
                return ResourceManager.GetString("UnableToImportWrongKeyPermission", resourceCulture);
            }
        }
    }
}
